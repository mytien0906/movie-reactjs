{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\movie\\\\src\\\\components\\\\Person\\\\carousel.js\";\nimport React from \"react\";\nimport InfiniteCarousel from \"react-leaf-carousel\"; // carousel data object\n\nconst ImgData = [{\n  alt: \"Image1\",\n  src: \"../images/1.jpeg\",\n  classId: \"testImg1\"\n}, {\n  alt: \"Image2\",\n  src: \"../images/2.jpeg\",\n  classId: \"testImg2\"\n}, {\n  alt: \"Image3\",\n  src: \"../images/3.jpeg\",\n  classId: \"testImg3\"\n}, {\n  alt: \"Image4\",\n  src: \"../images/4.jpeg\",\n  classId: \"testImg4\"\n}, {\n  alt: \"Image5\",\n  src: \"../images/5.jpg\",\n  classId: \"testImg5\"\n}, {\n  alt: \"Image6\",\n  src: \"../images/6.jpg\",\n  classId: \"testImg6\"\n}, {\n  alt: \"Image7\",\n  src: \"../images/7.jpg\",\n  classId: \"testImg7\"\n}];\nexport function Person({\n  match\n}) {\n  let params = match.params;\n  const [KnonwnPerson, setKnonwnPerson] = useState([]);\n  const [popularPersonTMDB, setpopularPersonTMDB] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDetail(await fetchPersonDetail(params.id));\n      setKnonwnPerson(await fetchTV(params.id));\n      setpopularPersonTMDB(await fetchPeople());\n    };\n\n    fetchAPI();\n  }, [params.id]);\n}\n; // carusel data component\n\nfunction ImgComponent({\n  src,\n  alt,\n  classId\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: src,\n    alt: alt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, alt));\n} // carousel data iterator\n\n\nconst ImgDataIterator = ImgData.map(element => /*#__PURE__*/React.createElement(ImgComponent, {\n  src: element.src,\n  alt: element.alt,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }\n}));\nexport default function RLCarousel() {\n  return /*#__PURE__*/React.createElement(InfiniteCarousel, {\n    breakpoints: [{\n      breakpoint: 200,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }, {\n      breakpoint: 640,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 2\n      }\n    }, {\n      breakpoint: 768,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3\n      }\n    }],\n    lazyLoad: false,\n    dots: true,\n    showSides: true,\n    sidesOpacity: 0.5,\n    sideSize: 0.1,\n    slidesToScroll: 4,\n    slidesToShow: 4,\n    scrollOnDevice: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, ImgDataIterator);\n}","map":{"version":3,"sources":["C:/wamp64/www/movie/src/components/Person/carousel.js"],"names":["React","InfiniteCarousel","ImgData","alt","src","classId","Person","match","params","KnonwnPerson","setKnonwnPerson","useState","popularPersonTMDB","setpopularPersonTMDB","useEffect","fetchAPI","setDetail","fetchPersonDetail","id","fetchTV","fetchPeople","ImgComponent","ImgDataIterator","map","element","RLCarousel","breakpoint","settings","slidesToShow","slidesToScroll"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport InfiniteCarousel from \"react-leaf-carousel\";\r\n\r\n// carousel data object\r\nconst ImgData = [\r\n    { alt: \"Image1\", src: \"../images/1.jpeg\", classId: \"testImg1\" },\r\n    { alt: \"Image2\", src: \"../images/2.jpeg\", classId: \"testImg2\" },\r\n    { alt: \"Image3\", src: \"../images/3.jpeg\", classId: \"testImg3\" },\r\n    { alt: \"Image4\", src: \"../images/4.jpeg\", classId: \"testImg4\" },\r\n    { alt: \"Image5\", src: \"../images/5.jpg\", classId: \"testImg5\" },\r\n    { alt: \"Image6\", src: \"../images/6.jpg\", classId: \"testImg6\" },\r\n    { alt: \"Image7\", src: \"../images/7.jpg\", classId: \"testImg7\" }\r\n];\r\nexport function Person({ match }) {\r\n    let params = match.params;\r\n    const [KnonwnPerson, setKnonwnPerson] = useState([]);\r\n    const [popularPersonTMDB, setpopularPersonTMDB] = useState([]);\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDetail(await fetchPersonDetail(params.id));\r\n            setKnonwnPerson(await fetchTV(params.id));\r\n            setpopularPersonTMDB(await fetchPeople());\r\n        };\r\n        fetchAPI();\r\n    }, [params.id]);\r\n};\r\n// carusel data component\r\n\r\nfunction ImgComponent({ src, alt, classId }) {\r\n    return (\r\n        <div className={classId}>\r\n            <img src={src} alt={alt} />\r\n            <p>{alt}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n// carousel data iterator\r\nconst ImgDataIterator = ImgData.map((element) => (\r\n    <ImgComponent src={element.src} alt={element.alt} />\r\n));\r\n\r\nexport default function RLCarousel() {\r\n    return (\r\n        <InfiniteCarousel\r\n            breakpoints={[\r\n                {\r\n                    breakpoint: 200,\r\n                    settings: {\r\n                        slidesToShow: 1,\r\n                        slidesToScroll: 1\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 640,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 2\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 768,\r\n                    settings: {\r\n                        slidesToShow: 3,\r\n                        slidesToScroll: 3\r\n                    }\r\n                }\r\n            ]}\r\n            lazyLoad={false}\r\n            dots={true}\r\n            showSides={true}\r\n            sidesOpacity={0.5}\r\n            sideSize={0.1}\r\n            slidesToScroll={4}\r\n            slidesToShow={4}\r\n            scrollOnDevice={true}\r\n        >\r\n            {ImgDataIterator}\r\n        </InfiniteCarousel>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}